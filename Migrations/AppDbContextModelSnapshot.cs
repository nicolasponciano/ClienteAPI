// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ClienteAPI_.Context;

#nullable disable

namespace ClienteAPI_.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClienteAPI_.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CLI_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DataCadastro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CLI_DATA_CADASTRO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CLI_NOME");

                    b.HasKey("Id");

                    b.ToTable("T_CLIENTES", (string)null);
                });

            modelBuilder.Entity("ClienteAPI_.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CTT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("CTT_ID_CLIENTE");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CTT_TEXTO");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CTT_TIPO");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("T_CONTATO", (string)null);
                });

            modelBuilder.Entity("ClienteAPI_.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("END_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("END_CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("END_CIDADE");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("END_ID_CLIENTE");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("END_COMPLEMENTO");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("END_LOGRADOURO");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("END_NUMERO");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("T_ENDERECO", (string)null);
                });

            modelBuilder.Entity("ClienteAPI_.Models.ViaCep", b =>
                {
                    b.Property<string>("Cep")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("VIA_CEP");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VIA_BAIRRO");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VIA_COMPLEMENTO");

                    b.Property<string>("Ddd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VIA_DDD");

                    b.Property<string>("Gia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VIA_GIA");

                    b.Property<string>("Ibge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VIA_IBGE");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VIA_LOCALIDADE");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VIA_LOGRADOURO");

                    b.Property<string>("Siafi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VIA_SIAFI");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VIA_UF");

                    b.HasKey("Cep");

                    b.ToTable("T_VIACEP", (string)null);
                });

            modelBuilder.Entity("ClienteAPI_.Models.Contato", b =>
                {
                    b.HasOne("ClienteAPI_.Models.Cliente", "ContatoCliente")
                        .WithOne("Contato")
                        .HasForeignKey("ClienteAPI_.Models.Contato", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContatoCliente");
                });

            modelBuilder.Entity("ClienteAPI_.Models.Endereco", b =>
                {
                    b.HasOne("ClienteAPI_.Models.Cliente", "EnderecoCliente")
                        .WithOne("Endereco")
                        .HasForeignKey("ClienteAPI_.Models.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnderecoCliente");
                });

            modelBuilder.Entity("ClienteAPI_.Models.Cliente", b =>
                {
                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("Endereco")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
